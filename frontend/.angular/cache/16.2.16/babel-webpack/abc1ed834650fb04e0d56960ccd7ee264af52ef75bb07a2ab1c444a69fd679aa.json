{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GenreService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}genres/`;\n  }\n  getGenres() {\n    return this.http.get(this.apiUrl);\n  }\n  getGenre(id) {\n    return this.http.get(`${this.apiUrl}${id}/`);\n  }\n  createGenre(genre) {\n    return this.http.post(this.apiUrl, genre);\n  }\n  updateGenre(id, genre) {\n    return this.http.put(`${this.apiUrl}${id}/`, genre);\n  }\n  deleteGenre(id) {\n    return this.http.delete(`${this.apiUrl}${id}/`);\n  }\n  static {\n    this.ɵfac = function GenreService_Factory(t) {\n      return new (t || GenreService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GenreService,\n      factory: GenreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","GenreService","constructor","http","apiUrl","getGenres","get","getGenre","id","createGenre","genre","post","updateGenre","put","deleteGenre","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\track_flow\\frontend\\src\\app\\services\\genre.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { Genre } from '../models/genre.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenreService {\n  private apiUrl = `${environment.apiUrl}genres/`;\n\n  constructor(private http: HttpClient) { }\n\n  getGenres(): Observable<Genre[]> {\n    return this.http.get<Genre[]>(this.apiUrl);\n  }\n\n  getGenre(id: number): Observable<Genre> {\n    return this.http.get<Genre>(`${this.apiUrl}${id}/`);\n  }\n\n  createGenre(genre: Genre): Observable<Genre> {\n    return this.http.post<Genre>(this.apiUrl, genre);\n  }\n\n  updateGenre(id: number, genre: Genre): Observable<Genre> {\n    return this.http.put<Genre>(`${this.apiUrl}${id}/`, genre);\n  }\n\n  deleteGenre(id: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}${id}/`);\n  }\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,SAAS;EAEP;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,QAAQA,CAACC,EAAU;IACjB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,GAAGI,EAAE,GAAG,CAAC;EACrD;EAEAC,WAAWA,CAACC,KAAY;IACtB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAQ,IAAI,CAACP,MAAM,EAAEM,KAAK,CAAC;EAClD;EAEAE,WAAWA,CAACJ,EAAU,EAAEE,KAAY;IAClC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAQ,GAAG,IAAI,CAACT,MAAM,GAAGI,EAAE,GAAG,EAAEE,KAAK,CAAC;EAC5D;EAEAI,WAAWA,CAACN,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,GAAGI,EAAE,GAAG,CAAC;EACjD;;;uBAvBWP,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZlB,YAAY;MAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}