{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"username\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, LoginComponent_div_17_div_1_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"password\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, route, router, authService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.loading = false;\n    this.submitted = false;\n    this.error = '';\n    this.returnUrl = '/';\n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.authService.login(this.f['username'].value, this.f['password'].value).subscribe({\n      next: () => {\n        this.router.navigate([this.returnUrl]);\n      },\n      error: error => {\n        this.error = error.error?.detail || 'Login failed. Please check your credentials.';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 12,\n      consts: [[1, \"col-md-6\", \"offset-md-3\", \"mt-5\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-grid\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h4\");\n          i0.ɵɵtext(4, \"Login\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(7, LoginComponent_div_7_Template, 2, 1, \"div\", 5);\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 6)(14, \"label\", 10);\n          i0.ɵɵtext(15, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 11);\n          i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 12)(19, \"button\", 13);\n          i0.ɵɵtemplate(20, LoginComponent_span_20_Template, 1, 0, \"span\", 14);\n          i0.ɵɵtext(21, \" Login \");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRoL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQ0FBcUM7QUFDdkMiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XG4gIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsMCwwLDAuMSk7XG59ICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","ɵɵtemplate","LoginComponent_div_12_div_1_Template","ɵɵproperty","ctx_r1","f","errors","LoginComponent_div_17_div_1_Template","ctx_r2","ɵɵelement","LoginComponent","constructor","formBuilder","route","router","authService","loading","submitted","returnUrl","currentUserValue","navigate","ngOnInit","loginForm","group","username","required","password","snapshot","queryParams","controls","onSubmit","invalid","login","value","subscribe","next","detail","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","LoginComponent_div_7_Template","LoginComponent_div_12_Template","LoginComponent_div_17_Template","LoginComponent_span_20_Template","ɵɵpureFunction1","_c0"],"sources":["C:\\Users\\mdinm\\OneDrive\\Рабочий стол\\track_flow\\frontend\\src\\app\\components\\auth\\login\\login.component.ts","C:\\Users\\mdinm\\OneDrive\\Рабочий стол\\track_flow\\frontend\\src\\app\\components\\auth\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  loading = false;\n  submitted = false;\n  error = '';\n  returnUrl: string = '/';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService\n  ) { \n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) { \n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authService.login(this.f['username'].value, this.f['password'].value)\n      .subscribe({\n        next: () => {\n          this.router.navigate([this.returnUrl]);\n        },\n        error: error => {\n          this.error = error.error?.detail || 'Login failed. Please check your credentials.';\n          this.loading = false;\n        }\n      });\n  }\n} ","<div class=\"col-md-6 offset-md-3 mt-5\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h4>Login</h4>\n    </div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"alert alert-danger\" *ngIf=\"error\">\n          {{error}}\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input type=\"text\" class=\"form-control\" id=\"username\" formControlName=\"username\" \n                [ngClass]=\"{ 'is-invalid': submitted && f['username'].errors }\">\n          <div *ngIf=\"submitted && f['username'].errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f['username'].errors['required']\">Username is required</div>\n          </div>\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\"\n                [ngClass]=\"{ 'is-invalid': submitted && f['password'].errors }\">\n          <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f['password'].errors['required']\">Password is required</div>\n          </div>\n        </div>\n        <div class=\"d-grid\">\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm me-1\"></span>\n            Login\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}