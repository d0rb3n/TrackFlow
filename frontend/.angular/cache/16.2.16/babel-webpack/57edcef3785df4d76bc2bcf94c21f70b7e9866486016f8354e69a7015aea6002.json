{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/genre.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction GenreListComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction GenreListComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.success, \" \");\n  }\n}\nfunction GenreListComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GenreListComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, GenreListComponent_div_18_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"name\"].errors == null ? null : ctx_r2.f[\"name\"].errors[\"required\"]);\n  }\n}\nfunction GenreListComponent_span_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n}\nfunction GenreListComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function GenreListComponent_button_27_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.resetForm());\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GenreListComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 31)(2, \"span\", 32);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction GenreListComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtext(1, \" No genres found. Add a new genre to get started. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GenreListComponent_div_36_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function GenreListComponent_div_36_tr_11_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const genre_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r13.editGenre(genre_r12));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function GenreListComponent_div_36_tr_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const genre_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.deleteGenre(genre_r12.id));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const genre_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(genre_r12.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(genre_r12.description || \"N/A\");\n  }\n}\nfunction GenreListComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"table\", 35)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, GenreListComponent_div_36_tr_11_Template, 10, 2, \"tr\", 36);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.genres);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class GenreListComponent {\n  constructor(genreService, formBuilder) {\n    this.genreService = genreService;\n    this.formBuilder = formBuilder;\n    this.genres = [];\n    this.loading = false;\n    this.submitting = false;\n    this.error = '';\n    this.success = '';\n    this.editMode = false;\n    this.currentGenreId = null;\n  }\n  ngOnInit() {\n    this.genreForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['']\n    });\n    this.loadGenres();\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.genreForm.controls;\n  }\n  loadGenres() {\n    this.loading = true;\n    this.genreService.getGenres().subscribe({\n      next: genres => {\n        this.genres = genres;\n        this.loading = false;\n      },\n      error: error => {\n        this.error = 'Failed to load genres. Please try again later.';\n        this.loading = false;\n        console.error('Error loading genres', error);\n      }\n    });\n  }\n  onSubmit() {\n    this.success = '';\n    this.error = '';\n    if (this.genreForm.invalid) {\n      return;\n    }\n    this.submitting = true;\n    if (this.editMode && this.currentGenreId) {\n      this.genreService.updateGenre(this.currentGenreId, this.genreForm.value).subscribe({\n        next: () => {\n          this.success = 'Genre updated successfully!';\n          this.loadGenres();\n          this.resetForm();\n          this.submitting = false;\n        },\n        error: error => {\n          this.error = error.error?.detail || 'Failed to update genre. Please try again.';\n          this.submitting = false;\n        }\n      });\n    } else {\n      this.genreService.createGenre(this.genreForm.value).subscribe({\n        next: () => {\n          this.success = 'Genre created successfully!';\n          this.loadGenres();\n          this.resetForm();\n          this.submitting = false;\n        },\n        error: error => {\n          this.error = error.error?.detail || 'Failed to create genre. Please try again.';\n          this.submitting = false;\n        }\n      });\n    }\n  }\n  editGenre(genre) {\n    this.editMode = true;\n    this.currentGenreId = genre.id;\n    this.genreForm.patchValue({\n      name: genre.name,\n      description: genre.description\n    });\n  }\n  deleteGenre(id) {\n    if (confirm('Are you sure you want to delete this genre?')) {\n      this.genreService.deleteGenre(id).subscribe({\n        next: () => {\n          this.success = 'Genre deleted successfully!';\n          this.loadGenres();\n        },\n        error: error => {\n          this.error = error.error?.detail || 'Failed to delete genre. Please try again.';\n        }\n      });\n    }\n  }\n  resetForm() {\n    this.genreForm.reset();\n    this.editMode = false;\n    this.currentGenreId = null;\n  }\n  static {\n    this.ɵfac = function GenreListComponent_Factory(t) {\n      return new (t || GenreListComponent)(i0.ɵɵdirectiveInject(i1.GenreService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GenreListComponent,\n      selectors: [[\"app-genre-list\"]],\n      decls: 37,\n      vars: 15,\n      consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"page-header\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"rows\", \"3\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-between\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [1, \"col-md-8\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-info\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-sm\", \"btn-outline-primary\", \"me-1\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"]],\n      template: function GenreListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Music Genres\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"h4\");\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function GenreListComponent_Template_form_ngSubmit_11_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(12, GenreListComponent_div_12_Template, 2, 1, \"div\", 8);\n          i0.ɵɵtemplate(13, GenreListComponent_div_13_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementStart(14, \"div\", 10)(15, \"label\", 11);\n          i0.ɵɵtext(16, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 12);\n          i0.ɵɵtemplate(18, GenreListComponent_div_18_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 10)(20, \"label\", 14);\n          i0.ɵɵtext(21, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"textarea\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 16)(24, \"button\", 17);\n          i0.ɵɵtemplate(25, GenreListComponent_span_25_Template, 1, 0, \"span\", 18);\n          i0.ɵɵtext(26);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(27, GenreListComponent_button_27_Template, 2, 0, \"button\", 19);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(28, \"div\", 20)(29, \"div\", 4)(30, \"div\", 5)(31, \"h4\");\n          i0.ɵɵtext(32, \"Genre List\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"div\", 6);\n          i0.ɵɵtemplate(34, GenreListComponent_div_34_Template, 4, 0, \"div\", 21);\n          i0.ɵɵtemplate(35, GenreListComponent_div_35_Template, 2, 0, \"div\", 22);\n          i0.ɵɵtemplate(36, GenreListComponent_div_36_Template, 12, 1, \"div\", 23);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate1(\"\", ctx.editMode ? \"Edit\" : \"Add\", \" Genre\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.genreForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.f[\"name\"].invalid && ctx.f[\"name\"].touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.f[\"name\"].invalid && ctx.f[\"name\"].touched);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", ctx.genreForm.invalid || ctx.submitting);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.editMode ? \"Update\" : \"Save\", \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.genres.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.genres.length > 0);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9nZW5yZXMvZ2VucmUtbGlzdC9nZW5yZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59ICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","ctx_r1","success","ɵɵtemplate","GenreListComponent_div_18_div_1_Template","ɵɵproperty","ctx_r2","f","errors","ɵɵelement","ɵɵlistener","GenreListComponent_button_27_Template_button_click_0_listener","ɵɵrestoreView","_r10","ctx_r9","ɵɵnextContext","ɵɵresetView","resetForm","GenreListComponent_div_36_tr_11_Template_button_click_6_listener","restoredCtx","_r14","genre_r12","$implicit","ctx_r13","editGenre","GenreListComponent_div_36_tr_11_Template_button_click_8_listener","ctx_r15","deleteGenre","id","ɵɵtextInterpolate","name","description","GenreListComponent_div_36_tr_11_Template","ctx_r7","genres","GenreListComponent","constructor","genreService","formBuilder","loading","submitting","editMode","currentGenreId","ngOnInit","genreForm","group","required","loadGenres","controls","getGenres","subscribe","next","console","onSubmit","invalid","updateGenre","value","detail","createGenre","genre","patchValue","confirm","reset","ɵɵdirectiveInject","i1","GenreService","i2","FormBuilder","selectors","decls","vars","consts","template","GenreListComponent_Template","rf","ctx","GenreListComponent_Template_form_ngSubmit_11_listener","GenreListComponent_div_12_Template","GenreListComponent_div_13_Template","GenreListComponent_div_18_Template","GenreListComponent_span_25_Template","GenreListComponent_button_27_Template","GenreListComponent_div_34_Template","GenreListComponent_div_35_Template","GenreListComponent_div_36_Template","ɵɵpureFunction1","_c0","touched","length"],"sources":["C:\\Users\\mdinm\\OneDrive\\Рабочий стол\\track_flow\\frontend\\src\\app\\components\\genres\\genre-list\\genre-list.component.ts","C:\\Users\\mdinm\\OneDrive\\Рабочий стол\\track_flow\\frontend\\src\\app\\components\\genres\\genre-list\\genre-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GenreService } from '../../../services/genre.service';\nimport { Genre } from '../../../models/genre.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-genre-list',\n  templateUrl: './genre-list.component.html',\n  styleUrls: ['./genre-list.component.css']\n})\nexport class GenreListComponent implements OnInit {\n  genres: Genre[] = [];\n  genreForm!: FormGroup;\n  loading = false;\n  submitting = false;\n  error = '';\n  success = '';\n  editMode = false;\n  currentGenreId: number | null = null;\n\n  constructor(\n    private genreService: GenreService,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.genreForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['']\n    });\n    \n    this.loadGenres();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.genreForm.controls; }\n\n  loadGenres(): void {\n    this.loading = true;\n    this.genreService.getGenres().subscribe({\n      next: (genres) => {\n        this.genres = genres;\n        this.loading = false;\n      },\n      error: (error) => {\n        this.error = 'Failed to load genres. Please try again later.';\n        this.loading = false;\n        console.error('Error loading genres', error);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.success = '';\n    this.error = '';\n    \n    if (this.genreForm.invalid) {\n      return;\n    }\n\n    this.submitting = true;\n    \n    if (this.editMode && this.currentGenreId) {\n      this.genreService.updateGenre(this.currentGenreId, this.genreForm.value).subscribe({\n        next: () => {\n          this.success = 'Genre updated successfully!';\n          this.loadGenres();\n          this.resetForm();\n          this.submitting = false;\n        },\n        error: (error) => {\n          this.error = error.error?.detail || 'Failed to update genre. Please try again.';\n          this.submitting = false;\n        }\n      });\n    } else {\n      this.genreService.createGenre(this.genreForm.value).subscribe({\n        next: () => {\n          this.success = 'Genre created successfully!';\n          this.loadGenres();\n          this.resetForm();\n          this.submitting = false;\n        },\n        error: (error) => {\n          this.error = error.error?.detail || 'Failed to create genre. Please try again.';\n          this.submitting = false;\n        }\n      });\n    }\n  }\n\n  editGenre(genre: Genre): void {\n    this.editMode = true;\n    this.currentGenreId = genre.id!;\n    this.genreForm.patchValue({\n      name: genre.name,\n      description: genre.description\n    });\n  }\n\n  deleteGenre(id: number): void {\n    if (confirm('Are you sure you want to delete this genre?')) {\n      this.genreService.deleteGenre(id).subscribe({\n        next: () => {\n          this.success = 'Genre deleted successfully!';\n          this.loadGenres();\n        },\n        error: (error) => {\n          this.error = error.error?.detail || 'Failed to delete genre. Please try again.';\n        }\n      });\n    }\n  }\n\n  resetForm(): void {\n    this.genreForm.reset();\n    this.editMode = false;\n    this.currentGenreId = null;\n  }\n} ","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <h2 class=\"page-header\">Music Genres</h2>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h4>{{ editMode ? 'Edit' : 'Add' }} Genre</h4>\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"genreForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"alert alert-danger\" *ngIf=\"error\">\n            {{error}}\n          </div>\n          <div class=\"alert alert-success\" *ngIf=\"success\">\n            {{success}}\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" \n                  [ngClass]=\"{ 'is-invalid': f['name'].invalid && f['name'].touched }\">\n            <div *ngIf=\"f['name'].invalid && f['name'].touched\" class=\"invalid-feedback\">\n              <div *ngIf=\"f['name'].errors?.['required']\">Name is required</div>\n            </div>\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"description\" class=\"form-label\">Description</label>\n            <textarea class=\"form-control\" id=\"description\" rows=\"3\" formControlName=\"description\"></textarea>\n          </div>\n          \n          <div class=\"d-flex justify-content-between\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"genreForm.invalid || submitting\">\n              <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n              {{ editMode ? 'Update' : 'Save' }}\n            </button>\n            <button type=\"button\" *ngIf=\"editMode\" class=\"btn btn-secondary\" (click)=\"resetForm()\">Cancel</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"col-md-8\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h4>Genre List</h4>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"text-center\" *ngIf=\"loading\">\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n        \n        <div *ngIf=\"!loading && genres.length === 0\" class=\"alert alert-info\">\n          No genres found. Add a new genre to get started.\n        </div>\n        \n        <div class=\"table-responsive\" *ngIf=\"!loading && genres.length > 0\">\n          <table class=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Description</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let genre of genres\">\n                <td>{{ genre.name }}</td>\n                <td>{{ genre.description || 'N/A' }}</td>\n                <td>\n                  <button class=\"btn btn-sm btn-outline-primary me-1\" (click)=\"editGenre(genre)\">Edit</button>\n                  <button class=\"btn btn-sm btn-outline-danger\" (click)=\"deleteGenre(genre.id!)\">Delete</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> "],"mappings":"AAGA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICWzDC,EAAA,CAAAC,cAAA,cAA8C;IAC5CD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,KAAA,MACF;;;;;IACAP,EAAA,CAAAC,cAAA,cAAiD;IAC/CD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAG,MAAA,CAAAC,OAAA,MACF;;;;;IAOIT,EAAA,CAAAC,cAAA,UAA4C;IAAAD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IADpEH,EAAA,CAAAC,cAAA,cAA6E;IAC3ED,EAAA,CAAAU,UAAA,IAAAC,wCAAA,kBAAkE;IACpEX,EAAA,CAAAG,YAAA,EAAM;;;;IADEH,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAY,UAAA,SAAAC,MAAA,CAAAC,CAAA,SAAAC,MAAA,kBAAAF,MAAA,CAAAC,CAAA,SAAAC,MAAA,aAAoC;;;;;IAW1Cf,EAAA,CAAAgB,SAAA,eAA8E;;;;;;IAGhFhB,EAAA,CAAAC,cAAA,iBAAuF;IAAtBD,EAAA,CAAAiB,UAAA,mBAAAC,8DAAA;MAAAlB,EAAA,CAAAmB,aAAA,CAAAC,IAAA;MAAA,MAAAC,MAAA,GAAArB,EAAA,CAAAsB,aAAA;MAAA,OAAStB,EAAA,CAAAuB,WAAA,CAAAF,MAAA,CAAAG,SAAA,EAAW;IAAA,EAAC;IAACxB,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;;IAa1GH,EAAA,CAAAC,cAAA,cAAyC;IAEPD,EAAA,CAAAE,MAAA,iBAAU;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAInDH,EAAA,CAAAC,cAAA,cAAsE;IACpED,EAAA,CAAAE,MAAA,yDACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;;IAYAH,EAAA,CAAAC,cAAA,SAAiC;IAC3BD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAAgC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzCH,EAAA,CAAAC,cAAA,SAAI;IACkDD,EAAA,CAAAiB,UAAA,mBAAAQ,iEAAA;MAAA,MAAAC,WAAA,GAAA1B,EAAA,CAAAmB,aAAA,CAAAQ,IAAA;MAAA,MAAAC,SAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAC,OAAA,GAAA9B,EAAA,CAAAsB,aAAA;MAAA,OAAStB,EAAA,CAAAuB,WAAA,CAAAO,OAAA,CAAAC,SAAA,CAAAH,SAAA,CAAgB;IAAA,EAAC;IAAC5B,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAC5FH,EAAA,CAAAC,cAAA,iBAA+E;IAAjCD,EAAA,CAAAiB,UAAA,mBAAAe,iEAAA;MAAA,MAAAN,WAAA,GAAA1B,EAAA,CAAAmB,aAAA,CAAAQ,IAAA;MAAA,MAAAC,SAAA,GAAAF,WAAA,CAAAG,SAAA;MAAA,MAAAI,OAAA,GAAAjC,EAAA,CAAAsB,aAAA;MAAA,OAAStB,EAAA,CAAAuB,WAAA,CAAAU,OAAA,CAAAC,WAAA,CAAAN,SAAA,CAAAO,EAAA,CAAsB;IAAA,EAAC;IAACnC,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAJ5FH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAoC,iBAAA,CAAAR,SAAA,CAAAS,IAAA,CAAgB;IAChBrC,EAAA,CAAAI,SAAA,GAAgC;IAAhCJ,EAAA,CAAAoC,iBAAA,CAAAR,SAAA,CAAAU,WAAA,UAAgC;;;;;IAZ5CtC,EAAA,CAAAC,cAAA,cAAoE;IAIxDD,EAAA,CAAAE,MAAA,WAAI;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACbH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,kBAAW;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACpBH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAGpBH,EAAA,CAAAC,cAAA,aAAO;IACLD,EAAA,CAAAU,UAAA,KAAA6B,wCAAA,kBAOK;IACPvC,EAAA,CAAAG,YAAA,EAAQ;;;;IARgBH,EAAA,CAAAI,SAAA,IAAS;IAATJ,EAAA,CAAAY,UAAA,YAAA4B,MAAA,CAAAC,MAAA,CAAS;;;;;;;;AD/D7C,OAAM,MAAOC,kBAAkB;EAU7BC,YACUC,YAA0B,EAC1BC,WAAwB;IADxB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,WAAW,GAAXA,WAAW;IAXrB,KAAAJ,MAAM,GAAY,EAAE;IAEpB,KAAAK,OAAO,GAAG,KAAK;IACf,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAxC,KAAK,GAAG,EAAE;IACV,KAAAE,OAAO,GAAG,EAAE;IACZ,KAAAuC,QAAQ,GAAG,KAAK;IAChB,KAAAC,cAAc,GAAkB,IAAI;EAKhC;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACtCf,IAAI,EAAE,CAAC,EAAE,EAAEtC,UAAU,CAACsD,QAAQ,CAAC;MAC/Bf,WAAW,EAAE,CAAC,EAAE;KACjB,CAAC;IAEF,IAAI,CAACgB,UAAU,EAAE;EACnB;EAEA;EACA,IAAIxC,CAACA,CAAA;IAAK,OAAO,IAAI,CAACqC,SAAS,CAACI,QAAQ;EAAE;EAE1CD,UAAUA,CAAA;IACR,IAAI,CAACR,OAAO,GAAG,IAAI;IACnB,IAAI,CAACF,YAAY,CAACY,SAAS,EAAE,CAACC,SAAS,CAAC;MACtCC,IAAI,EAAGjB,MAAM,IAAI;QACf,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACK,OAAO,GAAG,KAAK;MACtB,CAAC;MACDvC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACA,KAAK,GAAG,gDAAgD;QAC7D,IAAI,CAACuC,OAAO,GAAG,KAAK;QACpBa,OAAO,CAACpD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;KACD,CAAC;EACJ;EAEAqD,QAAQA,CAAA;IACN,IAAI,CAACnD,OAAO,GAAG,EAAE;IACjB,IAAI,CAACF,KAAK,GAAG,EAAE;IAEf,IAAI,IAAI,CAAC4C,SAAS,CAACU,OAAO,EAAE;MAC1B;;IAGF,IAAI,CAACd,UAAU,GAAG,IAAI;IAEtB,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,CAACC,cAAc,EAAE;MACxC,IAAI,CAACL,YAAY,CAACkB,WAAW,CAAC,IAAI,CAACb,cAAc,EAAE,IAAI,CAACE,SAAS,CAACY,KAAK,CAAC,CAACN,SAAS,CAAC;QACjFC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACjD,OAAO,GAAG,6BAA6B;UAC5C,IAAI,CAAC6C,UAAU,EAAE;UACjB,IAAI,CAAC9B,SAAS,EAAE;UAChB,IAAI,CAACuB,UAAU,GAAG,KAAK;QACzB,CAAC;QACDxC,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,EAAEyD,MAAM,IAAI,2CAA2C;UAC/E,IAAI,CAACjB,UAAU,GAAG,KAAK;QACzB;OACD,CAAC;KACH,MAAM;MACL,IAAI,CAACH,YAAY,CAACqB,WAAW,CAAC,IAAI,CAACd,SAAS,CAACY,KAAK,CAAC,CAACN,SAAS,CAAC;QAC5DC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACjD,OAAO,GAAG,6BAA6B;UAC5C,IAAI,CAAC6C,UAAU,EAAE;UACjB,IAAI,CAAC9B,SAAS,EAAE;UAChB,IAAI,CAACuB,UAAU,GAAG,KAAK;QACzB,CAAC;QACDxC,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,EAAEyD,MAAM,IAAI,2CAA2C;UAC/E,IAAI,CAACjB,UAAU,GAAG,KAAK;QACzB;OACD,CAAC;;EAEN;EAEAhB,SAASA,CAACmC,KAAY;IACpB,IAAI,CAAClB,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,cAAc,GAAGiB,KAAK,CAAC/B,EAAG;IAC/B,IAAI,CAACgB,SAAS,CAACgB,UAAU,CAAC;MACxB9B,IAAI,EAAE6B,KAAK,CAAC7B,IAAI;MAChBC,WAAW,EAAE4B,KAAK,CAAC5B;KACpB,CAAC;EACJ;EAEAJ,WAAWA,CAACC,EAAU;IACpB,IAAIiC,OAAO,CAAC,6CAA6C,CAAC,EAAE;MAC1D,IAAI,CAACxB,YAAY,CAACV,WAAW,CAACC,EAAE,CAAC,CAACsB,SAAS,CAAC;QAC1CC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACjD,OAAO,GAAG,6BAA6B;UAC5C,IAAI,CAAC6C,UAAU,EAAE;QACnB,CAAC;QACD/C,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACA,KAAK,EAAEyD,MAAM,IAAI,2CAA2C;QACjF;OACD,CAAC;;EAEN;EAEAxC,SAASA,CAAA;IACP,IAAI,CAAC2B,SAAS,CAACkB,KAAK,EAAE;IACtB,IAAI,CAACrB,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,cAAc,GAAG,IAAI;EAC5B;;;uBA5GWP,kBAAkB,EAAA1C,EAAA,CAAAsE,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAxE,EAAA,CAAAsE,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAlBhC,kBAAkB;MAAAiC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV/BjF,EAAA,CAAAC,cAAA,aAAiB;UAEWD,EAAA,CAAAE,MAAA,mBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAI7CH,EAAA,CAAAC,cAAA,aAAiB;UAILD,EAAA,CAAAE,MAAA,GAAqC;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAEhDH,EAAA,CAAAC,cAAA,cAAuB;UACSD,EAAA,CAAAiB,UAAA,sBAAAkE,sDAAA;YAAA,OAAYD,GAAA,CAAAtB,QAAA,EAAU;UAAA,EAAC;UACnD5D,EAAA,CAAAU,UAAA,KAAA0E,kCAAA,iBAEM;UACNpF,EAAA,CAAAU,UAAA,KAAA2E,kCAAA,iBAEM;UAENrF,EAAA,CAAAC,cAAA,eAAkB;UACqBD,EAAA,CAAAE,MAAA,YAAI;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACjDH,EAAA,CAAAgB,SAAA,iBAC2E;UAC3EhB,EAAA,CAAAU,UAAA,KAAA4E,kCAAA,kBAEM;UACRtF,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,eAAkB;UAC4BD,EAAA,CAAAE,MAAA,mBAAW;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC/DH,EAAA,CAAAgB,SAAA,oBAAkG;UACpGhB,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,eAA4C;UAExCD,EAAA,CAAAU,UAAA,KAAA6E,mCAAA,mBAA8E;UAC9EvF,EAAA,CAAAE,MAAA,IACF;UAAAF,EAAA,CAAAG,YAAA,EAAS;UACTH,EAAA,CAAAU,UAAA,KAAA8E,qCAAA,qBAAsG;UACxGxF,EAAA,CAAAG,YAAA,EAAM;UAMdH,EAAA,CAAAC,cAAA,eAAsB;UAGZD,EAAA,CAAAE,MAAA,kBAAU;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAErBH,EAAA,CAAAC,cAAA,cAAuB;UACrBD,EAAA,CAAAU,UAAA,KAAA+E,kCAAA,kBAIM;UAENzF,EAAA,CAAAU,UAAA,KAAAgF,kCAAA,kBAEM;UAEN1F,EAAA,CAAAU,UAAA,KAAAiF,kCAAA,mBAoBM;UACR3F,EAAA,CAAAG,YAAA,EAAM;;;UA1EAH,EAAA,CAAAI,SAAA,GAAqC;UAArCJ,EAAA,CAAAK,kBAAA,KAAA6E,GAAA,CAAAlC,QAAA,4BAAqC;UAGnChD,EAAA,CAAAI,SAAA,GAAuB;UAAvBJ,EAAA,CAAAY,UAAA,cAAAsE,GAAA,CAAA/B,SAAA,CAAuB;UACMnD,EAAA,CAAAI,SAAA,GAAW;UAAXJ,EAAA,CAAAY,UAAA,SAAAsE,GAAA,CAAA3E,KAAA,CAAW;UAGVP,EAAA,CAAAI,SAAA,GAAa;UAAbJ,EAAA,CAAAY,UAAA,SAAAsE,GAAA,CAAAzE,OAAA,CAAa;UAOvCT,EAAA,CAAAI,SAAA,GAAoE;UAApEJ,EAAA,CAAAY,UAAA,YAAAZ,EAAA,CAAA4F,eAAA,KAAAC,GAAA,EAAAX,GAAA,CAAApE,CAAA,SAAA+C,OAAA,IAAAqB,GAAA,CAAApE,CAAA,SAAAgF,OAAA,EAAoE;UACpE9F,EAAA,CAAAI,SAAA,GAA4C;UAA5CJ,EAAA,CAAAY,UAAA,SAAAsE,GAAA,CAAApE,CAAA,SAAA+C,OAAA,IAAAqB,GAAA,CAAApE,CAAA,SAAAgF,OAAA,CAA4C;UAWJ9F,EAAA,CAAAI,SAAA,GAA4C;UAA5CJ,EAAA,CAAAY,UAAA,aAAAsE,GAAA,CAAA/B,SAAA,CAAAU,OAAA,IAAAqB,GAAA,CAAAnC,UAAA,CAA4C;UACjF/C,EAAA,CAAAI,SAAA,GAAgB;UAAhBJ,EAAA,CAAAY,UAAA,SAAAsE,GAAA,CAAAnC,UAAA,CAAgB;UACvB/C,EAAA,CAAAI,SAAA,GACF;UADEJ,EAAA,CAAAK,kBAAA,MAAA6E,GAAA,CAAAlC,QAAA,0BACF;UACuBhD,EAAA,CAAAI,SAAA,GAAc;UAAdJ,EAAA,CAAAY,UAAA,SAAAsE,GAAA,CAAAlC,QAAA,CAAc;UAafhD,EAAA,CAAAI,SAAA,GAAa;UAAbJ,EAAA,CAAAY,UAAA,SAAAsE,GAAA,CAAApC,OAAA,CAAa;UAMjC9C,EAAA,CAAAI,SAAA,GAAqC;UAArCJ,EAAA,CAAAY,UAAA,UAAAsE,GAAA,CAAApC,OAAA,IAAAoC,GAAA,CAAAzC,MAAA,CAAAsD,MAAA,OAAqC;UAIZ/F,EAAA,CAAAI,SAAA,GAAmC;UAAnCJ,EAAA,CAAAY,UAAA,UAAAsE,GAAA,CAAApC,OAAA,IAAAoC,GAAA,CAAAzC,MAAA,CAAAsD,MAAA,KAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}