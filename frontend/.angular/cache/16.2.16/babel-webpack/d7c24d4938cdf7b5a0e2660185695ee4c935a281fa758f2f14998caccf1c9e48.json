{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthInterceptor {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.isRefreshing = false;\n    this.refreshTokenSubject = new BehaviorSubject(null);\n  }\n  intercept(request, next) {\n    const token = this.authService.getToken();\n    if (token) {\n      request = this.addToken(request, token);\n    }\n    return next.handle(request).pipe(catchError(error => {\n      if (error instanceof HttpErrorResponse && error.status === 401) {\n        return this.handle401Error(request, next);\n      } else {\n        return throwError(error);\n      }\n    }));\n  }\n  addToken(request, token) {\n    return request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  handle401Error(request, next) {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n      return this.authService.refreshToken().pipe(switchMap(token => {\n        this.isRefreshing = false;\n        this.refreshTokenSubject.next(token.access);\n        localStorage.setItem('access_token', token.access);\n        return next.handle(this.addToken(request, token.access));\n      }), catchError(err => {\n        this.isRefreshing = false;\n        this.authService.clearLocalStorage();\n        this.router.navigate(['/login']);\n        return throwError(err);\n      }));\n    } else {\n      return this.refreshTokenSubject.pipe(filter(token => token != null), take(1), switchMap(jwt => {\n        return next.handle(this.addToken(request, jwt));\n      }));\n    }\n  }\n  static {\n    this.ɵfac = function AuthInterceptor_Factory(t) {\n      return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthInterceptor,\n      factory: AuthInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["HttpErrorResponse","throwError","BehaviorSubject","catchError","filter","take","switchMap","AuthInterceptor","constructor","authService","router","isRefreshing","refreshTokenSubject","intercept","request","next","token","getToken","addToken","handle","pipe","error","status","handle401Error","clone","setHeaders","Authorization","refreshToken","access","localStorage","setItem","err","clearLocalStorage","navigate","jwt","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac"],"sources":["C:\\Users\\mdinm\\OneDrive\\Рабочий стол\\track_flow\\frontend\\src\\app\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const token = this.authService.getToken();\n    \n    if (token) {\n      request = this.addToken(request, token);\n    }\n\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          return this.handle401Error(request, next);\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n\n  private addToken(request: HttpRequest<any>, token: string): HttpRequest<any> {\n    return request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n\n      return this.authService.refreshToken().pipe(\n        switchMap((token: any) => {\n          this.isRefreshing = false;\n          this.refreshTokenSubject.next(token.access);\n          localStorage.setItem('access_token', token.access);\n          return next.handle(this.addToken(request, token.access));\n        }),\n        catchError((err) => {\n          this.isRefreshing = false;\n          this.authService.clearLocalStorage();\n          this.router.navigate(['/login']);\n          return throwError(err);\n        })\n      );\n    } else {\n      return this.refreshTokenSubject.pipe(\n        filter(token => token != null),\n        take(1),\n        switchMap(jwt => {\n          return next.handle(this.addToken(request, jwt));\n        })\n      );\n    }\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}