{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/playlist.service\";\nimport * as i2 from \"../../../services/track.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction PlaylistListComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction PlaylistListComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.success, \" \");\n  }\n}\nfunction PlaylistListComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PlaylistListComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, PlaylistListComponent_div_18_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"name\"].errors == null ? null : ctx_r2.f[\"name\"].errors[\"required\"]);\n  }\n}\nfunction PlaylistListComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"input\", 35);\n    i0.ɵɵlistener(\"change\", function PlaylistListComponent_div_31_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const track_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.toggleTrackSelection(track_r10.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 36);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const track_r10 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"track_\" + track_r10.id)(\"checked\", ctx_r3.isTrackSelected(track_r10.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", \"track_\" + track_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", track_r10.title, \" - \", track_r10.artist_name, \" \");\n  }\n}\nfunction PlaylistListComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37);\n    i0.ɵɵtext(1, \" No tracks available. Please add tracks first. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PlaylistListComponent_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 38);\n  }\n}\nfunction PlaylistListComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39)(1, \"div\", 40)(2, \"span\", 41);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction PlaylistListComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵtext(1, \" No playlists found. Create your first playlist to get started. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PlaylistListComponent_div_45_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44)(1, \"div\", 45)(2, \"div\", 6)(3, \"h5\", 46);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 47);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 47)(8, \"small\", 48);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"div\", 49);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const playlist_r14 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(playlist_r14.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(playlist_r14.description || \"No description\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" Tracks: \", (playlist_r14.tracks == null ? null : playlist_r14.tracks.length) || 0, \" | Visibility: \", playlist_r14.is_public ? \"Public\" : \"Private\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Created: \", i0.ɵɵpipeBind2(12, 5, playlist_r14.created_at, \"medium\"), \" \");\n  }\n}\nfunction PlaylistListComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0);\n    i0.ɵɵtemplate(1, PlaylistListComponent_div_45_div_1_Template, 13, 8, \"div\", 43);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.playlists);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class PlaylistListComponent {\n  constructor(playlistService, trackService, formBuilder) {\n    this.playlistService = playlistService;\n    this.trackService = trackService;\n    this.formBuilder = formBuilder;\n    this.playlists = [];\n    this.tracks = [];\n    this.loading = false;\n    this.submitting = false;\n    this.error = '';\n    this.success = '';\n    this.selectedTracks = [];\n  }\n  ngOnInit() {\n    this.playlistForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: [''],\n      is_public: [true]\n    });\n    this.loadPlaylists();\n    this.loadTracks();\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.playlistForm.controls;\n  }\n  loadPlaylists() {\n    this.loading = true;\n    this.playlistService.getPlaylists().subscribe({\n      next: playlists => {\n        this.playlists = playlists;\n        this.loading = false;\n      },\n      error: error => {\n        this.error = 'Failed to load playlists. Please try again later.';\n        this.loading = false;\n        console.error('Error loading playlists', error);\n      }\n    });\n  }\n  loadTracks() {\n    this.trackService.getTracks().subscribe({\n      next: tracks => {\n        this.tracks = tracks;\n      },\n      error: error => {\n        console.error('Error loading tracks', error);\n      }\n    });\n  }\n  toggleTrackSelection(trackId) {\n    const index = this.selectedTracks.indexOf(trackId);\n    if (index !== -1) {\n      this.selectedTracks.splice(index, 1);\n    } else {\n      this.selectedTracks.push(trackId);\n    }\n  }\n  isTrackSelected(trackId) {\n    return this.selectedTracks.includes(trackId);\n  }\n  onSubmit() {\n    this.success = '';\n    this.error = '';\n    if (this.playlistForm.invalid) {\n      return;\n    }\n    if (this.selectedTracks.length === 0) {\n      this.error = 'Please select at least one track for your playlist';\n      return;\n    }\n    this.submitting = true;\n    const playlist = {\n      ...this.playlistForm.value,\n      tracks: this.selectedTracks\n    };\n    this.playlistService.createPlaylist(playlist).subscribe({\n      next: () => {\n        this.success = 'Playlist created successfully!';\n        this.loadPlaylists();\n        this.resetForm();\n        this.submitting = false;\n      },\n      error: error => {\n        this.error = error.error?.detail || 'Failed to create playlist. Please try again.';\n        this.submitting = false;\n      }\n    });\n  }\n  resetForm() {\n    this.playlistForm.reset({\n      is_public: true\n    });\n    this.selectedTracks = [];\n  }\n  static {\n    this.ɵfac = function PlaylistListComponent_Factory(t) {\n      return new (t || PlaylistListComponent)(i0.ɵɵdirectiveInject(i1.PlaylistService), i0.ɵɵdirectiveInject(i2.TrackService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PlaylistListComponent,\n      selectors: [[\"app-playlist-list\"]],\n      decls: 46,\n      vars: 14,\n      consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"page-header\"], [1, \"col-md-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"rows\", \"2\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"id\", \"is_public\", \"formControlName\", \"is_public\", 1, \"form-check-input\"], [\"for\", \"is_public\", 1, \"form-check-label\"], [1, \"form-label\"], [1, \"track-selection\"], [\"class\", \"form-check\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-warning mt-2\", 4, \"ngIf\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"col-md-8\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"form-check\"], [\"type\", \"checkbox\", 1, \"form-check-input\", 3, \"id\", \"checked\", \"change\"], [1, \"form-check-label\", 3, \"for\"], [1, \"alert\", \"alert-warning\", \"mt-2\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"], [1, \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-info\"], [\"class\", \"col-md-6 mb-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\", \"mb-4\"], [1, \"card\", \"h-100\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"text-muted\"], [1, \"card-footer\", \"text-muted\"]],\n      template: function PlaylistListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Playlists\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 3)(6, \"div\", 4)(7, \"div\", 5)(8, \"h4\");\n          i0.ɵɵtext(9, \"Create Playlist\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 6)(11, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function PlaylistListComponent_Template_form_ngSubmit_11_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(12, PlaylistListComponent_div_12_Template, 2, 1, \"div\", 8);\n          i0.ɵɵtemplate(13, PlaylistListComponent_div_13_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementStart(14, \"div\", 10)(15, \"label\", 11);\n          i0.ɵɵtext(16, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 12);\n          i0.ɵɵtemplate(18, PlaylistListComponent_div_18_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 10)(20, \"label\", 14);\n          i0.ɵɵtext(21, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"textarea\", 15);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 16);\n          i0.ɵɵelement(24, \"input\", 17);\n          i0.ɵɵelementStart(25, \"label\", 18);\n          i0.ɵɵtext(26, \"Public Playlist\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 10)(28, \"label\", 19);\n          i0.ɵɵtext(29, \"Select Tracks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 20);\n          i0.ɵɵtemplate(31, PlaylistListComponent_div_31_Template, 4, 5, \"div\", 21);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(32, PlaylistListComponent_div_32_Template, 2, 0, \"div\", 22);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"div\", 23)(34, \"button\", 24);\n          i0.ɵɵtemplate(35, PlaylistListComponent_span_35_Template, 1, 0, \"span\", 25);\n          i0.ɵɵtext(36, \" Create Playlist \");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(37, \"div\", 26)(38, \"div\", 4)(39, \"div\", 5)(40, \"h4\");\n          i0.ɵɵtext(41, \"My Playlists\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(42, \"div\", 6);\n          i0.ɵɵtemplate(43, PlaylistListComponent_div_43_Template, 4, 0, \"div\", 27);\n          i0.ɵɵtemplate(44, PlaylistListComponent_div_44_Template, 2, 0, \"div\", 28);\n          i0.ɵɵtemplate(45, PlaylistListComponent_div_45_Template, 2, 1, \"div\", 29);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"formGroup\", ctx.playlistForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.f[\"name\"].invalid && ctx.f[\"name\"].touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.f[\"name\"].invalid && ctx.f[\"name\"].touched);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tracks);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.tracks.length === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.playlistForm.invalid || ctx.submitting || ctx.tracks.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.playlists.length === 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.playlists.length > 0);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.DatePipe],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.track-selection[_ngcontent-%COMP%] {\\n  max-height: 200px;\\n  overflow-y: auto;\\n  border: 1px solid #dee2e6;\\n  border-radius: 0.25rem;\\n  padding: 10px;\\n}\\n\\n.form-check[_ngcontent-%COMP%] {\\n  margin-bottom: 8px;\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wbGF5bGlzdHMvcGxheWxpc3QtbGlzdC9wbGF5bGlzdC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLHlCQUF5QjtFQUN6QixzQkFBc0I7RUFDdEIsYUFBYTtBQUNmOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4udHJhY2stc2VsZWN0aW9uIHtcbiAgbWF4LWhlaWdodDogMjAwcHg7XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZWUyZTY7XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVyZW07XG4gIHBhZGRpbmc6IDEwcHg7XG59XG5cbi5mb3JtLWNoZWNrIHtcbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xufSAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","ctx_r1","success","ɵɵtemplate","PlaylistListComponent_div_18_div_1_Template","ɵɵproperty","ctx_r2","f","errors","ɵɵlistener","PlaylistListComponent_div_31_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r12","track_r10","$implicit","ctx_r11","ɵɵnextContext","ɵɵresetView","toggleTrackSelection","id","ctx_r3","isTrackSelected","ɵɵtextInterpolate2","title","artist_name","ɵɵelement","ɵɵtextInterpolate","playlist_r14","name","description","tracks","length","is_public","ɵɵpipeBind2","created_at","PlaylistListComponent_div_45_div_1_Template","ctx_r8","playlists","PlaylistListComponent","constructor","playlistService","trackService","formBuilder","loading","submitting","selectedTracks","ngOnInit","playlistForm","group","required","loadPlaylists","loadTracks","controls","getPlaylists","subscribe","next","console","getTracks","trackId","index","indexOf","splice","push","includes","onSubmit","invalid","playlist","value","createPlaylist","resetForm","detail","reset","ɵɵdirectiveInject","i1","PlaylistService","i2","TrackService","i3","FormBuilder","selectors","decls","vars","consts","template","PlaylistListComponent_Template","rf","ctx","PlaylistListComponent_Template_form_ngSubmit_11_listener","PlaylistListComponent_div_12_Template","PlaylistListComponent_div_13_Template","PlaylistListComponent_div_18_Template","PlaylistListComponent_div_31_Template","PlaylistListComponent_div_32_Template","PlaylistListComponent_span_35_Template","PlaylistListComponent_div_43_Template","PlaylistListComponent_div_44_Template","PlaylistListComponent_div_45_Template","ɵɵpureFunction1","_c0","touched"],"sources":["C:\\Users\\mdinm\\OneDrive\\Рабочий стол\\track_flow\\frontend\\src\\app\\components\\playlists\\playlist-list\\playlist-list.component.ts","C:\\Users\\mdinm\\OneDrive\\Рабочий стол\\track_flow\\frontend\\src\\app\\components\\playlists\\playlist-list\\playlist-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PlaylistService } from '../../../services/playlist.service';\nimport { TrackService } from '../../../services/track.service';\nimport { Playlist } from '../../../models/playlist.model';\nimport { Track } from '../../../models/track.model';\n\n@Component({\n  selector: 'app-playlist-list',\n  templateUrl: './playlist-list.component.html',\n  styleUrls: ['./playlist-list.component.css']\n})\nexport class PlaylistListComponent implements OnInit {\n  playlists: Playlist[] = [];\n  tracks: Track[] = [];\n  playlistForm!: FormGroup;\n  loading = false;\n  submitting = false;\n  error = '';\n  success = '';\n  selectedTracks: number[] = [];\n\n  constructor(\n    private playlistService: PlaylistService,\n    private trackService: TrackService,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.playlistForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: [''],\n      is_public: [true]\n    });\n    \n    this.loadPlaylists();\n    this.loadTracks();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.playlistForm.controls; }\n\n  loadPlaylists(): void {\n    this.loading = true;\n    this.playlistService.getPlaylists().subscribe({\n      next: (playlists) => {\n        this.playlists = playlists;\n        this.loading = false;\n      },\n      error: (error) => {\n        this.error = 'Failed to load playlists. Please try again later.';\n        this.loading = false;\n        console.error('Error loading playlists', error);\n      }\n    });\n  }\n\n  loadTracks(): void {\n    this.trackService.getTracks().subscribe({\n      next: (tracks) => {\n        this.tracks = tracks;\n      },\n      error: (error) => {\n        console.error('Error loading tracks', error);\n      }\n    });\n  }\n\n  toggleTrackSelection(trackId: number): void {\n    const index = this.selectedTracks.indexOf(trackId);\n    if (index !== -1) {\n      this.selectedTracks.splice(index, 1);\n    } else {\n      this.selectedTracks.push(trackId);\n    }\n  }\n\n  isTrackSelected(trackId: number): boolean {\n    return this.selectedTracks.includes(trackId);\n  }\n\n  onSubmit(): void {\n    this.success = '';\n    this.error = '';\n    \n    if (this.playlistForm.invalid) {\n      return;\n    }\n\n    if (this.selectedTracks.length === 0) {\n      this.error = 'Please select at least one track for your playlist';\n      return;\n    }\n\n    this.submitting = true;\n    \n    const playlist: Playlist = {\n      ...this.playlistForm.value,\n      tracks: this.selectedTracks\n    };\n    \n    this.playlistService.createPlaylist(playlist).subscribe({\n      next: () => {\n        this.success = 'Playlist created successfully!';\n        this.loadPlaylists();\n        this.resetForm();\n        this.submitting = false;\n      },\n      error: (error) => {\n        this.error = error.error?.detail || 'Failed to create playlist. Please try again.';\n        this.submitting = false;\n      }\n    });\n  }\n\n  resetForm(): void {\n    this.playlistForm.reset({\n      is_public: true\n    });\n    this.selectedTracks = [];\n  }\n} ","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <h2 class=\"page-header\">Playlists</h2>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h4>Create Playlist</h4>\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"playlistForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"alert alert-danger\" *ngIf=\"error\">\n            {{error}}\n          </div>\n          <div class=\"alert alert-success\" *ngIf=\"success\">\n            {{success}}\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" \n                  [ngClass]=\"{ 'is-invalid': f['name'].invalid && f['name'].touched }\">\n            <div *ngIf=\"f['name'].invalid && f['name'].touched\" class=\"invalid-feedback\">\n              <div *ngIf=\"f['name'].errors?.['required']\">Name is required</div>\n            </div>\n          </div>\n          \n          <div class=\"mb-3\">\n            <label for=\"description\" class=\"form-label\">Description</label>\n            <textarea class=\"form-control\" id=\"description\" rows=\"2\" formControlName=\"description\"></textarea>\n          </div>\n          \n          <div class=\"mb-3 form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"is_public\" formControlName=\"is_public\">\n            <label class=\"form-check-label\" for=\"is_public\">Public Playlist</label>\n          </div>\n          \n          <div class=\"mb-3\">\n            <label class=\"form-label\">Select Tracks</label>\n            <div class=\"track-selection\">\n              <div class=\"form-check\" *ngFor=\"let track of tracks\">\n                <input class=\"form-check-input\" type=\"checkbox\" \n                       [id]=\"'track_' + track.id\" \n                       [checked]=\"isTrackSelected(track.id!)\"\n                       (change)=\"toggleTrackSelection(track.id!)\">\n                <label class=\"form-check-label\" [for]=\"'track_' + track.id\">\n                  {{ track.title }} - {{ track.artist_name }}\n                </label>\n              </div>\n            </div>\n            <div *ngIf=\"tracks.length === 0\" class=\"alert alert-warning mt-2\">\n              No tracks available. Please add tracks first.\n            </div>\n          </div>\n          \n          <div class=\"d-grid\">\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"playlistForm.invalid || submitting || tracks.length === 0\">\n              <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n              Create Playlist\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"col-md-8\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h4>My Playlists</h4>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"text-center\" *ngIf=\"loading\">\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n        \n        <div *ngIf=\"!loading && playlists.length === 0\" class=\"alert alert-info\">\n          No playlists found. Create your first playlist to get started.\n        </div>\n        \n        <div class=\"row\" *ngIf=\"!loading && playlists.length > 0\">\n          <div class=\"col-md-6 mb-4\" *ngFor=\"let playlist of playlists\">\n            <div class=\"card h-100\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ playlist.name }}</h5>\n                <p class=\"card-text\">{{ playlist.description || 'No description' }}</p>\n                <p class=\"card-text\">\n                  <small class=\"text-muted\">\n                    Tracks: {{ playlist.tracks?.length || 0 }} | \n                    Visibility: {{ playlist.is_public ? 'Public' : 'Private' }}\n                  </small>\n                </p>\n              </div>\n              <div class=\"card-footer text-muted\">\n                Created: {{ playlist.created_at | date:'medium' }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}